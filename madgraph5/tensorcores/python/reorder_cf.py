import numpy as np
import sys

cf = np.array([
    [512, -64, -64, 8, 8, 80, -64, 8,     8, -1, -1, -10, 8, -1, 80, -10,     71, 62, -1, -10, -10, 62, 62, -28],  # noqa
    [-64, 512, 8, 80, -64, 8, 8, -64,     -1, -10, 8, -1, -1, -10, -10, 62,   62, -28, 8, -1, 80, -10, 71, 62],  # noqa
    [-64, 8, 512, -64, 80, 8, 8, -1,      80, -10, 71, 62, -64, 8, 8, -1,     -1, -10, -10, -1, 62, -28, -10, 62],  # noqa
    [8, 80, -64, 512, 8, -64, -1, -10,    -10, 62, 62, -28, 8, -64, -1, -10,  8, -1, -1, 8, 71, 62, 80, -10],  # noqa
    [8, -64, 80, 8, 512, -64, -1, 8,      71, 62, 80, -10, -10, -1, 62, -28,  -10, 62, -64, 8, 8, -1, -1, -10],  # noqa
    [80, 8, 8, -64, -64, 512, -10, -1,    62, -28, -10, 62, -1, 8, 71, 62,    80, -10, 8, -64, -1, -10, 8, -1],  # noqa
    [-64, 8, 8, -1, -1, -10, 512, -64,    -64, 8, 8, 80, 80, -10, 8, -1,      62, 71, -10, 62, -1, -10, -28, 62],  # noqa
    [8, -64, -1, -10, 8, -1, -64, 512,    8, 80, -64, 8, -10, 62, -1, -10,    -28, 62, 80, -10, 8, -1, 62, 71],  # noqa

    [8, -1, 80, -10, 71, 62, -64, 8,      512, -64, 80, 8, 8, -1, -64, 8,     -10, -1, 62, -28, -10, -1, 62, -10],  # noqa
    [-1, -10, -10, 62, 62, -28, 8, 80,    -64, 512, 8, -64, -1, -10, 8, -64,  -1, 8, 71, 62, -1, 8, -10, 80],  # noqa
    [-1, 8, 71, 62, 80, -10, 8, -64,      80, 8, 512, -64, 62, -28, -10, -1,  62, -10, 8, -1, -64, 8, -10, -1],  # noqa
    [-10, -1, 62, -28, -10, 62, 80, 8,    8, -64, -64, 512, 71, 62, -1, 8,    -10, 80, -1, -10, 8, -64, -1, 8],  # noqa
    [8, -1, -64, 8, -10, -1, 80, -10,     8, -1, 62, 71, 512, -64, -64, 8,    8, 80, 62, -10, -28, 62, -1, -10],  # noqa
    [-1, -10, 8, -64, -1, 8, -10, 62,     -1, -10, -28, 62, -64, 512, 8, 80,  -64, 8, -10, 80, 62, 71, 8, -1],  # noqa
    [80, -10, 8, -1, 62, 71, 8, -1,       -64, 8, -10, -1, -64, 8, 512, -64,  80, 8, -28, 62, 62, -10, -10, -1],  # noqa
    [-10, 62, -1, -10, -28, 62, -1, -10,  8, -64, -1, 8, 8, 80, -64, 512,     8, -64, 62, 71, -10, 80, -1, 8],  # noqa

    [71, 62, -1, 8, -10, 80, 62, -28,     -10, -1, 62, -10, 8, -64, 80, 8,    512, -64, -1, 8, -10, -1, -64, 8],  # noqa
    [62, -28, -10, -1, 62, -10, 71, 62,   -1, 8, -10, 80, 80, 8, 8, -64,      -64, 512, -10, -1, -1, 8, 8, -64],  # noqa
    [-1, 8, -10, -1, -64, 8, -10, 80,     62, 71, 8, -1, 62, -10, -28, 62,    -1, -10, 512, -64, -64, 8, 8, 80],  # noqa
    [-10, -1, -1, 8, 8, -64, 62, -10,     -28, 62, -1, -10, -10, 80, 62, 71,  8, -1, -64, 512, 8, 80, -64, 8],  # noqa
    [-10, 80, 62, 71, 8, -1, -1, 8,       -10, -1, -64, 8, -28, 62, 62, -10,  -10, -1, -64, 8, 512, -64, 80, 8],  # noqa
    [62, -10, -28, 62, -1, -10, -10, -1,  -1, 8, 8, -64, 62, 71, -10, 80,     -1, 8, 8, 80, -64, 512, 8, -64],  # noqa
    [62, 71, -10, 80, -1, 8, -28, 62,     62, -10, -10, -1, -1, 8, -10, -1,   -64, 8, 8, -64, 80, 8, 512, -64],  # noqa
    [-28, 62, 62, -10, -10, -1, 62, 71,   -10, 80, -1, 8, -10, -1, -1, 8,     8, -64, 80, 8, 8, -64, -64, 512]   # noqa
])

dim = 24
stride = 8
step = int(dim / stride)

printscreen = True

for k in range(step):
    for c in range(0, dim):
        for r in range(k * stride, (k + 1) * stride):
            sys.stdout.write(str(cf[r][c]) + ', ')
        if printscreen:
            sys.stdout.write("\n")
            if (c + 1) % stride == 0:
                sys.stdout.write("\n")
        else:
            if (c + 1) % step == 0:
                sys.stdout.write("\n")
